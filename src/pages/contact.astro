---
import Layout from "../layouts/Layout.astro";
---

<Layout
    title="Contact Me | BestCodes"
    mainClass="w-full h-full flex justify-center items-center"
    cloudflare={true}
>
    <div
        class="max-w-lg container bg-gray-100 dark:bg-gray-700 p-4 m-2 sm:p-6 sm:m-0 rounded-2xl"
    >
        <h1
            class="text-3xl font-bold mb-6 text-gray-800 dark:text-gray-100 text-center"
        >
            Contact Me
        </h1>
        <form
            id="contact-form"
            class="space-y-4"
            method="POST"
            action="/api/contact"
        >
            <div>
                <label
                    for="name"
                    class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
                    >Name</label
                >
                <input
                    type="text"
                    id="name"
                    name="name"
                    class="mt-1 block w-full border border-gray-300 dark:border-gray-700 rounded-lg px-3 py-2 focus:ring focus:ring-opacity-50 focus:border-indigo-500 focus:ring-indigo-500 aria-invalid:border-red-500 aria-invalid:ring-red-500 aria-invalid:focus:ring-red-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100"
                    required
                    aria-required="true"
                    aria-describedby="name-error"
                />
                <p
                    id="name-error"
                    class="mt-1 text-sm text-red-500 hidden"
                    role="alert"
                >
                </p>
            </div>
            <div>
                <label
                    for="email"
                    class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
                    >Email</label
                >
                <input
                    type="email"
                    id="email"
                    name="email"
                    class="mt-1 block w-full border border-gray-300 dark:border-gray-700 rounded-lg px-3 py-2 focus:ring focus:ring-opacity-50 focus:border-indigo-500 focus:ring-indigo-500 aria-invalid:border-red-500 aria-invalid:ring-red-500 aria-invalid:focus:ring-red-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100"
                    required
                    aria-required="true"
                    aria-describedby="email-error"
                />
                <p
                    id="email-error"
                    class="mt-1 text-sm text-red-500 hidden"
                    role="alert"
                >
                </p>
            </div>
            <div>
                <label
                    for="message"
                    class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
                    >Message</label
                >
                <textarea
                    id="message"
                    name="message"
                    rows="5"
                    class="mt-1 block w-full min-h-8 max-h-96 border border-gray-300 dark:border-gray-700 rounded-lg px-3 py-2 focus:ring focus:ring-opacity-50 focus:border-indigo-500 focus:ring-indigo-500 aria-invalid:border-red-500 aria-invalid:ring-red-500 aria-invalid:focus:ring-red-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100"
                    required
                    aria-required="true"
                    aria-describedby="message-error"></textarea>
                <p
                    id="message-error"
                    class="mt-1 text-sm text-red-500 hidden"
                    role="alert"
                >
                </p>
            </div>
            <div class="turnstile-container">
                <div class="cf-turnstile" data-sitekey="0x4AAAAAAAfgP80mkF0iiKza"></div>
            </div>
            <div>
                <button
                    type="submit"
                    class="bg-blue-500 text-white font-medium py-2 px-4 rounded-lg hover:bg-blue-600 w-full"
                >
                    Send Message
                </button>
            </div>
        </form>
        <div
            id="form-message"
            class="mt-4 text-green-500 hidden text-center"
            role="alert"
        >
        </div>
    </div>

    <script is:inline>
        const form = document.getElementById("contact-form");
        const formMessage = document.getElementById("form-message");
        const turnstile = document.querySelector(
            ".turnstile-container .cf-turnstile",
        );
        form.addEventListener("submit", async (event) => {
            event.preventDefault();
            const formData = new FormData(form);
            const turnstileResponse = turnstile?.getAttribute(
                "data-cf-turnstile-response",
            );
            if (!turnstileResponse) {
                formMessage.textContent =
                    "Please complete the Turnstile verification.";
                formMessage.classList.remove("hidden", "text-green-500");
                formMessage.classList.add("text-red-500");
                return;
            }
            formData.append("turnstileResponse", turnstileResponse);
            // Reset error messages
            document.querySelectorAll('[id$="-error"]').forEach((el) => {
                el.textContent = "";
                el.classList.add("hidden");
            });
            formMessage.classList.add("hidden");

            try {
                const response = await fetch("/api/contact", {
                    method: "POST",
                    body: formData,
                });

                if (response.ok) {
                    form.reset();
                    turnstile.removeAttribute("data-cf-turnstile-response");
                    formMessage.textContent = "Your message has been sent!";
                    formMessage.classList.remove("hidden", "text-red-500");
                    formMessage.classList.add("text-green-500");
                } else {
                    const errors = await response.json();
                    if (
                        response.status === 400 &&
                        errors &&
                        typeof errors === "object"
                    ) {
                        for (const key in errors) {
                            const errorElement = document.getElementById(
                                `${key}-error`,
                            );
                            if (errorElement) {
                                errorElement.textContent = errors[key];
                                errorElement.classList.remove("hidden");
                            }
                        }
                    } else {
                        formMessage.textContent =
                            "An error occurred, please try again.";
                        formMessage.classList.remove(
                            "hidden",
                            "text-green-500",
                        );
                        formMessage.classList.add("text-red-500");
                    }
                }
            } catch (error) {
                console.error("Error sending the form: ", error);
                formMessage.textContent =
                    "An unexpected error occurred. Please try again later.";
                formMessage.classList.remove("hidden", "text-green-500");
                formMessage.classList.add("text-red-500");
            }
        });
    </script>
</Layout>
